class Solution {
public:
int lps[1000007];

void lps_cal(string p) {
    int index = 0;
    lps[0]=0;
    int i=1;
    int n = p.size();
    while(i<n) {
        if(p[i]==p[index]) {
            lps[i] = index+1;
            index++;
            i++;
        } else {
            if(index!=0) {
                index = lps[index-1];
            } else {
                lps[i]=0;
                i++;
            }
        }
    }
    return;
}
    int strStr(string haystack, string needle) {
        lps_cal(needle);
        int i=0;
        int j=0;
        int n = haystack.size();
        int m = needle.size();
        while(i<n && j<m) {
            if(haystack[i]==needle[j]){
                i++;
                j++;
            } else {
                if(j!=0) {
                    j = lps[j-1];
                } else {
                    i++;
                }
            }
        }
        if(j==m)
        return i-m;
        return -1;
    }
};
