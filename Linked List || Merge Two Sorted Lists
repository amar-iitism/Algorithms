/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* dummy = new ListNode(0);
        ListNode* ptr = dummy;
        while(list1 && list2){
            int t1 = list1->val;
            int t2= list2->val;
            //cout<<"it, t1="<<t1<<" t2="<<t2<<endl;
            if( t1<=t2 ){
                ptr->next=list1;
                ptr=ptr->next;
                list1=list1->next;
            } else {
                cout<<"xx"<<endl;
                ptr->next=list2;
                ptr=ptr->next;
                list2=list2->next;
            }
            //cout<<"val="<<ptr->val<<endl;
        }
        while(list1) {
            ptr->next=list1;
            ptr=ptr->next;
            list1=list1->next;
        }
        while(list2) {
        ptr->next=list2;
        ptr=ptr->next;
        list2=list2->next;            
        }
        return dummy->next;
    }
};
