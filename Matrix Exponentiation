#include<bits/stdc++.h>
using namespace std;
#define pi pair<ll,ll>
#define fr freopen("in.txt","r",stdin)
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define frep(i,n) for(int i=1;i<=n;i++)
#define ll long long
#define f first
#define s second
#define maxn 50
const ll mod = 1e9+7;
struct mat
{
    int sz;
    ll a[maxn][maxn];
    mat(int size) {
        sz = size;
        rep(i,sz) {
            rep(j,sz) {
                a[i][j] = 0;
            }
        }
    }
    void make_identity() {
        rep(i,sz) {
            rep(j,sz) {
                a[i][j] = 0;
            }
            a[i][i] = 1;
        }
    }
    mat operator*(const mat& other) { 
        mat c(sz);
        rep(i,sz) {
            rep(j,sz) {
                rep(k,sz) {
                    c.a[i][j] += (a[i][k] * other.a[k][j])%mod;
                    c.a[i][j] %= mod;
                }
            }
        }
        return c;
    }
};
mat bpow(mat x,int n) {
    mat ans(x.sz);
    ans.make_identity();
    while(n>0) {
        if(n&1) {
            ans = ans*x;
        }
        x = x*x;
        n/=2;
    }
    return ans;
}
int main() {
    int T;
    cin >> T;
    assert(T<=50);
    while(T--) {
        int N,M;
        cin >> N >> M;
        assert(N>=1 and N<=1e9);
        assert(M>=1 and M<=50);
        mat zero(M),one(M),two(M);
        rep(i,M) {
            zero.a[i][i]++;
            if(i-1>=0) {
                zero.a[i][i-1]++;
            }
            if(i+1<M) {
                zero.a[i][i+1]++;
            }
            one.a[i][i]++;
            if(i-2>=0) {
                one.a[i][i-2]++;
            }
            if(i+2<M) {
                one.a[i][i+2]++;
            }
            two.a[i][i]++;
            if(i-3>=0) {
                two.a[i][i-3]++;
            }
            if(i+3<M) {
                two.a[i][i+3]++;
            }
        }
        mat combined = one*two;
        combined = combined*zero;
        combined = bpow(combined,(N-1)/3);
        if((N-1)%3>=1) combined = combined*one;
        if((N-1)%3==2) combined = combined*two;
        ll ans = 0;
        rep(i,M) {
            rep(j,M) {
                ans += combined.a[i][j];
                if(ans >= mod) ans-=mod;
            }
        }
        cout << ans << "\n";
    }
}
