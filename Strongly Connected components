#include<bits/stdc++.h>
using namespace std;
vector<int> v[17],vr[17];
int vis[17];
int n,m;
stack<int> s;

void dfs1(int x)
{
  vis[x]=1;
  for(int i=0;i<v[x].size();i++)
  {
   int y=v[x][i];
   if(vis[y]==0)
   dfs1(y);
  }
  s.push(x);
}

void dfs2(int x)
{
  vis[x]=1;
  cout<<x<<" ";
  for(int i=0;i<vr[x].size();i++)
  {
   int y=vr[x][i];
   if(vis[y]==0)
   dfs2(y);
  }
}

void kosaraju_scc()
{
  memset(vis,0,sizeof(vis));
  for(int i=1;i<=n;i++)
  {
   if(vis[i]==0)
   dfs1(i);
  }
  memset(vis,0,sizeof(vis));
  while(!s.empty())
  {
   int x=s.top();
   s.pop();
   if(vis[x]==0)
   {
    dfs2(x);
    cout<<endl;
   }
  }
}

int main()
{
  cin>>n>>m;
  for(int i=0;i<m;i++)
  {
   int a,b;
   cin>>a>>b;
   v[a].push_back(b);
   vr[b].push_back(a);
  }
  kosaraju_scc();
}
